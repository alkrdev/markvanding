[{"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\index.js":"1","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\App.jsx":"2","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\phonenumbers.jsx":"3","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overview.jsx":"4","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\maintenance.jsx":"5","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\startmachine.jsx":"6","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\showmachine.jsx":"7","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewstillgoing.jsx":"8","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewexpired.jsx":"9","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\machinepark.jsx":"10"},{"size":234,"mtime":1615901222907,"results":"11","hashOfConfig":"12"},{"size":15888,"mtime":1617689195483,"results":"13","hashOfConfig":"12"},{"size":805,"mtime":1615992445832,"results":"14","hashOfConfig":"12"},{"size":1224,"mtime":1617003127473,"results":"15","hashOfConfig":"12"},{"size":2192,"mtime":1617172930068,"results":"16","hashOfConfig":"12"},{"size":3630,"mtime":1616054784658,"results":"17","hashOfConfig":"12"},{"size":4432,"mtime":1616679710566,"results":"18","hashOfConfig":"12"},{"size":2029,"mtime":1617172812922,"results":"19","hashOfConfig":"12"},{"size":2207,"mtime":1617025202129,"results":"20","hashOfConfig":"12"},{"size":19241,"mtime":1617800644286,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"losjx2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\index.js",[],["51","52"],"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\App.jsx",["53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { useEffect, useState } from 'react';\r\nimport Overview from './components/overview';\r\nimport Phonenumbers from './components/phonenumbers';\r\nimport Startmachine from './components/startmachine';\r\nimport Maintenance from './components/maintenance';\r\nimport Machinepark from './components/machinepark';\r\nimport Showmachine from './components/showmachine';\r\n\r\nfunction App() {\r\n\r\n  const windowWidth = window.innerWidth;\r\n\r\n  const [stage, setStage] = useState(\"overview\")\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const [selectedTime, setSelectedtime] = useState({})\r\n\r\n  const [stillgoingMachines, setStillgoingMachines] = useState([])\r\n  const [expiredMachines, setExpiredMachines] = useState([])\r\n  const [activeMachines, setActiveMachines] = useState([])\r\n  const [activePumps, setActivePumps] = useState([])\r\n  const [inactiveMachines, setInactiveMachines] = useState([])\r\n  const [inactivePumps, setInactivePumps] = useState([])\r\n  const [allPumps, setAllPumps] = useState([])\r\n  const [allMachines, setAllMachines] = useState([])\r\n  const [shownMachine, setShownMachine] = useState([])\r\n  const [notes, setNotes] = useState([])\r\n  \r\n  const machine = localStorage.getItem(\"machine\")\r\n  const pump = localStorage.getItem(\"pump\")\r\n\r\n\r\n  function slide(){\r\n    const burger = document.querySelector('.burger');\r\n    const nav = document.querySelector('.nav-links');\r\n    const navLinks = document.querySelectorAll('.nav-links li');\r\n\r\n    //Toggle Nav\r\n    nav.classList.toggle('nav-active');\r\n    \r\n    //Animate Links\r\n    navLinks.forEach(function(link, index){\r\n      link.classList.toggle('nav-active-li');\r\n      if(link.style.animation){\r\n        link.style.animation = '';\r\n      }\r\n      else{\r\n        link.style.animation = `navLinkFade 0.5s ease forwards ${index / 7 + 0.5}s`\r\n      }\r\n    });\r\n\r\n    //Animate Burger\r\n    burger.classList.toggle('toggle');\r\n  }\r\n\r\n  const HandleNavClick = function(event, stage, text) {\r\n    setStage(stage)\r\n    var array = event.target.parentNode.parentNode.children\r\n\r\n\r\n    for (const line of array) {\r\n      var anchor = line.children[0];\r\n      anchor.style.color = \"rgb(233, 233, 233)\"\r\n    }\r\n\r\n    for (const line of array) {\r\n      var anchor = line.children[0];\r\n\r\n      if (anchor.innerHTML.toLowerCase() == text.toLowerCase()) {\r\n        anchor.style.color = \"rgb(235, 101, 45)\"\r\n        break\r\n      }\r\n    }\r\n\r\n    if (windowWidth <= 1280) slide();\r\n }\r\n\r\n  // function HandleClick(navbar) {\r\n  //   switch (navbar) {\r\n  //     case \"overview\":\r\n  //       setStage(\"overview\")\r\n  //       break;\r\n  //     case \"startmachine\":\r\n  //       setStage(\"startmachine\")\r\n  //       break;\r\n  //     case \"phonenumber\":\r\n  //       setStage(\"phonenumber\")\r\n  //       break;\r\n  //     case \"maintenance\":\r\n  //       setStage(\"maintenance\")\r\n  //       break;\r\n  //     case \"addmachine\":\r\n  //       setStage(\"addmachine\")\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n\r\n    \r\n  //   if (windowWidth <= 1280) slide();\r\n  // }\r\n\r\n  function chooseTime(event, time) {\r\n\r\n    var tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    var tablinks = document.getElementsByClassName(\"tablinks\");\r\n    var choosetime = document.getElementById('choosetime');\r\n\r\n    for (var i = 0; i < tabcontent.length; i++) {\r\n      tabcontent[i].style.display = \"none\";\r\n    }\r\n\r\n    for (i = 0; i < tablinks.length; i++) {\r\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n    }\r\n\r\n    var children = choosetime.children;\r\n\r\n    if (time === \"timeremaining\")\r\n    {\r\n      children[1].style.display = \"block\"\r\n    } else\r\n    {\r\n      children[2].style.display = \"block\"\r\n    }\r\n    event.currentTarget.className += \" active\";\r\n  }\r\n/*\r\n  function formatDate(date, format) {\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    const map = {\r\n        dd: date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate(),  \r\n        mm: months[date.getMonth()],\r\n        t: date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours(),\r\n        m: date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()\r\n    }\r\n\r\n    return format.replace(/dd|mm|t|m/gi, matched => map[matched])\r\n  }\r\n  \r\n  function formatTime(date, format) {\r\n    const map = {\r\n        hh: date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours(),  \r\n        mm: date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes(),\r\n        ss: date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds()\r\n    }\r\n\r\n    return format.replace(/hh|mm|ss/gi, matched => map[matched])\r\n  }\r\n  */\r\n  \r\n  function TimeChanged(event){\r\n    const {name, value} = event.target\r\n    \r\n    var now = new Date();\r\n\r\n    if (name === \"timeremaining\") {\r\n      var hours = parseInt(value.slice(0, 2))\r\n      var minutes = parseInt(value.slice(3))\r\n\r\n      now.setHours(now.getHours() + hours)\r\n      now.setMinutes(now.getMinutes() + minutes)\r\n      console.log(now)\r\n    } else {\r\n      now = new Date(value);\r\n    }\r\n    console.log(now)\r\n    //Tue Feb 16 2021 10:25:00 GMT+0100 (Central European Standard Time)\r\n    setSelectedtime(now)\r\n  }\r\n\r\n  function UpdateMachine(updatedMachine){\r\n\r\n    // Set date of machine to selected date\r\n     var tempMachine = {...updatedMachine}\r\n     \r\n     tempMachine.time = selectedTime.toLocaleString(\"da-DK\", {\r\n       dateStyle: \"short\",\r\n       timeStyle: \"medium\"\r\n     });\r\n     \r\n     var tempTime = tempMachine.time.split(\" \");\r\n     var date = tempTime[0].split(\".\")\r\n     tempTime[0] = date[2] + \"-\" + date[1] + \"-\" + date[0]\r\n     tempMachine.time = tempTime.join(\" \");\r\n\r\n    fetch(\"http://10.10.60.161:5000/updatemachine\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempMachine)\r\n    })\r\n  }\r\n\r\n  function UpdatePump(pump){\r\n\r\n    // Set date of machine to selected date\r\n     var tempPump = {...pump}\r\n     \r\n     tempPump.active = 1;\r\n     \r\n\r\n    fetch(\"http://10.10.60.161:5000/updatepump\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempPump)\r\n    })\r\n  }\r\n\r\n  function StopPump(pump){\r\n\r\n    // Set date of machine to selected date\r\n     var tempPump = {...pump}\r\n     \r\n     tempPump.active = 0;\r\n     \r\n\r\n    fetch(\"http://10.10.60.161:5000/updatepump\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempPump)\r\n    })\r\n  }\r\n\r\n  function StopMachine(machine){\r\n\r\n    // Set date of machine to selected date\r\n     var tempMachine = {...machine}\r\n    \r\n     tempMachine.pumpname = null\r\n     tempMachine.time = null\r\n     tempMachine.active = 0\r\n     \r\n\r\n    fetch(\"http://10.10.60.161:5000/updatemachine\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempMachine)\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(function() \r\n  {\r\n    document.querySelectorAll(\".nav-links\")[0].children[0].children[0].style.color = \"rgb(235, 101, 45)\"\r\n    var hasstarted = localStorage.getItem(\"hasstarted\")\r\n    if (hasstarted == \"true\") {\r\n      console.log(\"Hej\")\r\n      setSubmitted(true)\r\n    }\r\n    fetch(\"http://10.10.60.161:5000/activemachines\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setActiveMachines(json)\r\n        setStillgoingMachines(json.filter(x => new Date() < new Date(x.time)))\r\n        setExpiredMachines(json.filter(x => new Date() > new Date(x.time)))\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      fetch(\"http://10.10.60.161:5000/activepumps\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setActivePumps(json)     \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      fetch(\"http://10.10.60.161:5000/inactivemachines\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setInactiveMachines(json)     \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      fetch(\"http://10.10.60.161:5000/inactivepumps\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setInactivePumps(json)     \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      fetch(\"http://10.10.60.161:5000/allpumps\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setAllPumps(json)     \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      fetch(\"http://10.10.60.161:5000/allmachines\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setAllMachines(json)\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n      \r\n  \r\n    }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {submitted ? (\r\n        <form onSubmit={function(event) {\r\n          \r\n          if(machine && pump){\r\n            console.log(machine)\r\n            console.log(pump)\r\n          }\r\n\r\n\r\n          var startMachine = {\r\n            id: machine,\r\n            pumpname: pump,\r\n            time: \"2000-01-01 00:00:00\",\r\n            active: 1\r\n          }\r\n          \r\n          \r\n          var months = {\r\n            \"Jan\": \"January\",\r\n            \"Feb\": \"February\",\r\n            \"Mar\": \"March\",\r\n            \"Apr\": \"April\",\r\n            \"Maj\": \"May\",\r\n            \"Jun\": \"June\",\r\n            \"Jul\": \"July\",\r\n            \"Aug\": \"August\",\r\n            \"Sep\": \"September\",\r\n            \"Oct\": \"October\",\r\n            \"Nov\": \"November\",\r\n            \"Dec\": \"December\"\r\n          }\r\n\r\n          // Prevents default behavior (Getting put at another site)\r\n          event.preventDefault();\r\n\r\n          startMachine.time = selectedTime;\r\n\r\n          /*\r\n          // Set time to whatever the user picked\r\n          tempMachine[\"time\"] = selectedTime.replace(\"T\", \" \"); // Temp value, not correct\r\n          console.log(tempMachine.time)\r\n\r\n          //\"October 13, 2014 11:13:00\"\r\n          //\"06 Mar 03:24\"\r\n\r\n          console.log(tempMachine.time)\r\n          //06 Mar 03:24\r\n\r\n          tempMachine.time += \":00\";\r\n\r\n          console.log(tempMachine.time)\r\n          //06 Mar 03:24:00\r\n\r\n          var tempTime = tempMachine.time.split(\" \");\r\n\r\n          tempTime.push(new Date().getFullYear());\r\n\r\n          console.log(tempTime)\r\n          //06 Mar 03:24:00 2021\r\n\r\n          tempMachine.time = months[tempTime[1]] + \" \" + tempTime[0] + \" \" + tempTime[3] + \" \" + tempTime[2];\r\n\r\n          console.log(tempMachine.time)\r\n          //Mar 06 2021 03:24:00\r\n \r\n          \r\n          var newDate = new Date(tempMachine.time)\r\n\r\n          var timeDiff = newDate.getTime() - new Date().getTime()\r\n\r\n          \r\n          var hours = Math.floor(timeDiff / 3.6e6);\r\n          \r\n          var minutes = Math.floor((timeDiff % 3.6e6) / 6e4);\r\n          \r\n          var seconds = Math.floor((timeDiff % 6e4) / 1000)\r\n          \r\n          tempMachine.time = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds)\r\n          */\r\n          \r\n          // var returned = formatTime(newDate, \"hh:mm:ss\")\r\n\r\n          console.log(startMachine)\r\n          \r\n          // Make new array with the old data from tempdatamachines, and add \"tempMachine\" to it\r\n          setActiveMachines(activeMachines => [...activeMachines, startMachine])\r\n\r\n          // Removes active machine from dropdown menu\r\n          setInactiveMachines(inactiveMachines.filter(machine => startMachine.id != machine.id))\r\n\r\n          // Removes active pump from dropdown menu\r\n          setInactivePumps(inactivePumps.filter(pump => startMachine.pumpname != pump.name))\r\n\r\n          UpdateMachine(startMachine);\r\n          \r\n          // Set current stage to \"overview\", and set \"Submitted\" hook to false\r\n\r\n          localStorage.setItem(\"pump\", \"\")\r\n          localStorage.setItem(\"machine\", \"\")\r\n          localStorage.setItem(\"hasstarted\", \"false\")\r\n          setSubmitted(false);\r\n          window.location.href = \"/\"\r\n        }}>\r\n          <div id=\"choosetime\">\r\n            <div className=\"tab\">\r\n              <button type=\"button\" className=\"tablinks\" onClick={(event) => chooseTime(event, 'timeremaining')}>Tid tilbage</button>\r\n              <button type=\"button\" className=\"tablinks\" onClick={(event) => chooseTime(event, 'date')}>Klokkeslæt</button>\r\n            </div>\r\n\r\n            <div id=\"timeremaining\" className=\"tabcontent\">\r\n              <h3>Tid tilbage</h3>\r\n              <input name=\"timeremaining\" onChange={(event) => TimeChanged(event)} type=\"time\" size=\"50\"></input>\r\n              <br></br>\r\n              <button type=\"submit\" className=\"choosetimesubmit\">START</button>\r\n            </div>\r\n\r\n            <div id=\"date\" className=\"tabcontent\">\r\n              <h3>Klokkeslæt</h3>\r\n              <input name=\"date\" onChange={(event) => TimeChanged(event)} type=\"datetime-local\" min={new Date().toISOString().slice(0, 16)} size=\"50\"></input>\r\n              <br></br>\r\n              <button type=\"submit\" className=\"choosetimesubmit\">START</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      ) : <>\r\n        <header>\r\n          <nav>\r\n            <div className=\"logo\">\r\n              <h1>Markvanding</h1>\r\n            </div>\r\n            <ul className=\"nav-links\">\r\n              <li>\r\n                <a href=\"#\" onClick={(e) => HandleNavClick(e, \"overview\", \"OVERSIGT\")}>OVERSIGT</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={(e) => HandleNavClick(e, \"startmachine\", \"START VANDING\")}>START VANDING</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={(e) => HandleNavClick(e, \"phonenumber\", \"TELEFONNUMRE\")}>TELEFONNUMRE</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={(e) => HandleNavClick(e, \"maintenance\", \"VEDLIGEHOLDELSE\")}>VEDLIGEHOLDELSE</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={(e) => HandleNavClick(e, \"machinepark\", \"MASKINPARK\")}>MASKINPARK</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"burger\" onClick={slide}>\r\n              <div className=\"line1\"></div>\r\n              <div className=\"line2\"></div>\r\n              <div className=\"line3\"></div>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n        \r\n        <main>\r\n        {\r\n          stage === \"overview\" ? (\r\n            <Overview activePumps={activePumps} stopMachine={StopMachine} stopPump={StopPump} setSubmitted={setSubmitted} expiredMachines = {expiredMachines} stillgoingMachines = {stillgoingMachines}/>\r\n          ) : stage === \"startmachine\" ? (\r\n            <Startmachine setSubmitted={setSubmitted} activeMachines={activeMachines} inactivePumps={inactivePumps} inactiveMachines={inactiveMachines} updatePump={UpdatePump} setSubmitted={setSubmitted}/>\r\n          ) : stage === \"phonenumber\" ? (\r\n            <Phonenumbers  allPumps={allPumps} setSubmitted={setSubmitted}/>\r\n          ) : stage === \"maintenance\" ? (\r\n            <Maintenance allMachines={allMachines} setSubmitted={setSubmitted} setStage={setStage} setShownMachine={setShownMachine} setNotes={setNotes}/>\r\n          ) : stage === \"machinepark\" ? (\r\n            <Machinepark allPumps={allPumps} allMachines={allMachines} setSubmitted={setSubmitted}/>\r\n          ) : stage === \"showmachine\" ? (\r\n            <Showmachine shownMachine={shownMachine} setStage={setStage} notes={notes}/>\r\n          ) : <></>\r\n        }\r\n      </main>\r\n      </>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\phonenumbers.jsx",["65","66"],"import React, {useEffect, useState} from 'react';\r\n\r\nfunction Phonenumbers({allPumps}) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(function() \r\n  {\r\n  }, [])\r\n\r\n  return (\r\n    <table id=\"phonenumbers\">\r\n      <thead>\r\n        <tr>\r\n          <th>Pumpe Navn</th>\r\n          <th>Pumpe Nummer</th>\r\n          <th>Startkode</th>\r\n          <th>Stopkode</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {allPumps.map(function(data)\r\n        {\r\n          return (\r\n            <tr key={data[\"id\"]}>\r\n              <td>{data[\"name\"]}</td>\r\n              <td>{data[\"number\"]}</td>\r\n              <td>{data[\"startcode\"]}</td>\r\n              <td>{data[\"stopcode\"]}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Phonenumbers;\r\n","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overview.jsx",["67","68","69"],"import React, { useEffect, useState } from 'react';\r\nimport Overviewstillgoing from './overviewstillgoing';\r\nimport Overviewexpired from './overviewexpired';\r\n\r\nfunction Overview({activeMachines, activePumps, stopMachine, stopPump, setSubmitted, expiredMachines, stillgoingMachines}) {\r\n\r\n\r\n  function sendStopSMS(pumpnumber, pumpstopcode){\r\n    fetch(\"http://10.10.60.161:5000/sendsms\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        number: pumpnumber,\r\n        message: pumpstopcode\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n    \r\n  }, [])\r\n\r\n  if (expiredMachines != 0) {\r\n    return (\r\n      <div>\r\n        <Overviewexpired expiredMachines = {expiredMachines} activePumps = {activePumps} stopMachine = {stopMachine} stopPump = {stopPump}/>\r\n        <Overviewstillgoing stillgoingMachines = {stillgoingMachines} activePumps = {activePumps} stopMachine = {stopMachine} stopPump = {stopPump}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Overviewstillgoing stillgoingMachines = {stillgoingMachines} activePumps = {activePumps} stopMachine = {stopMachine} stopPump = {stopPump}/>\r\n  )\r\n}\r\n\r\nexport default Overview;\r\n","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\maintenance.jsx",["70","71","72"],"import { useState, useEffect } from \"react\"\r\n\r\nfunction Maintenance({allMachines, setStage, setShownMachine, setNotes}){\r\n\r\n  const HandleClick = (machine) => {\r\n\r\n    setShownMachine(machine)\r\n    setStage(\"showmachine\")\r\n\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n    fetch(\"http://10.10.60.161:5000/getnotes\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setNotes(json)     \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [])\r\n\r\n  return(\r\n    <div id=\"maintenance\">\r\n      <h1 id=\"maintenancetext\">Tryk på en boks for at tilgå maskinen</h1>\r\n      {allMachines.map((machine) => {\r\n        var color\r\n        var active\r\n        var pumpname\r\n        var time\r\n        if(machine.active == 1) {\r\n          color = \"#42CB6B\"\r\n          active = \"Aktiv\"\r\n          pumpname = machine.pumpname\r\n          time = new Date(machine[\"time\"]).toLocaleString(\"da-DK\", {\r\n            dateStyle: \"medium\",\r\n            timeStyle: \"short\"\r\n        });\r\n        }\r\n        else{\r\n          color = \"#DF4848\"\r\n          active = \"Inaktiv\"\r\n          pumpname = \"Ingen pumpe\"\r\n          time = \"Ingen tid\"\r\n        }\r\n      return(\r\n        <button id=\"maintenanceboxes\" onClick={() => {HandleClick(machine)}}>\r\n            <div>\r\n              <h1 id=\"machineid\">\r\n                {machine.id}\r\n              </h1>\r\n              <div id=\"hid-box\" style={{background: color}}>\r\n                <p id=\"active\">\r\n                  {active}\r\n                </p>\r\n                <div id=\"maintenanceboxhover\">\r\n                  <p className=\"maintenanceboxheading\">\r\n                    Pumpenavn\r\n                  </p>\r\n                  <h3 className=\"maintenanceboxtext\">\r\n                    {pumpname}\r\n                  </h3>\r\n                  <p className=\"maintenanceboxheading\">\r\n                    Stop tidspunkt\r\n                  </p>\r\n                  <h3 className=\"maintenanceboxtext\">\r\n                    {time}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </button>\r\n      )\r\n    })}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Maintenance;","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\startmachine.jsx",["73","74","75","76","77","78"],"import React, { useEffect, useState } from 'react';\r\n\r\nfunction Startmachine({setSubmitted, setStartmachine, activeMachines, inactivePumps, inactiveMachines, updatePump}){\r\n  const [data, setData] = useState([]);\r\n  const [checked, setChecked] = useState(false)\r\n  const [machine, setMachine] = useState(\"\")\r\n  const [pump, setPump] = useState(\"\")\r\n\r\n  function sendStartSMS(pumpnumber, pumpstartcode){\r\n    fetch(\"http://10.10.60.161:5000/sendsms\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        number: pumpnumber,\r\n        message: pumpstartcode\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n  }, [])\r\n\r\n  return(\r\n      <form className=\"select\" id=\"formstartmachine\" onSubmit={function(event){\r\n\r\n        // Prevents default behavior (Getting put at another site)\r\n        event.preventDefault();\r\n\r\n\r\n        // Check if Checkbox is true or false\r\n        if(!checked) return;\r\n\r\n\r\n        // Checks if a machine and pump is selected\r\n        if(machine && pump){\r\n          // MAKE MACHINE OBJECT\r\n          updatePump(pump)\r\n\r\n          // SET PUMP TO ACTIVE ---- pump.id\r\n          \r\n         \r\n          \r\n          \r\n          // UDFYLD RIGTIG DATA TIL SMS\r\n          var pumpnumber = \"+45\" + pump.number\r\n          var pumpstartcode = pump.startcode\r\n          //sendStartSMS(pumpnumber, pumpstartcode)\r\n          \r\n          // Sets \"Submitted\" hook to true\r\n          localStorage.setItem(\"machine\", machine)\r\n          localStorage.setItem(\"pump\", pump.name)\r\n          localStorage.setItem(\"hasstarted\", \"true\")\r\n          setSubmitted(true)\r\n        };\r\n      }}>\r\n        <div id=\"choosemachine\">\r\n          <label htmlFor=\"chosenmachine\">Vælg en maskine</label>\r\n          <br></br>\r\n          <select name=\"chosenmachine\" id=\"chosenmachine\" onChange={function(event){\r\n            setMachine(event.target.value);\r\n          }}>\r\n            <option selected disabled hidden></option>\r\n            {\r\n            inactiveMachines.map(function(element) {\r\n              return <option key={element.id}>{element.id}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n  \r\n        <br></br>\r\n  \r\n        <div id=\"choosepump\">\r\n          <label htmlFor=\"\">Vælg en pumpe</label>\r\n          <br></br>\r\n          <select name=\"chosenpump\" id=\"chosenpump\" onChange={function(event){\r\n            var options = event.target.children;\r\n            var option = options[event.target.selectedIndex];\r\n\r\n            setPump(inactivePumps.find((pump) => {\r\n              return pump.id == option.dataset.id\r\n            }));\r\n          }}>\r\n            <option selected disabled hidden></option>\r\n            {inactivePumps.map(function(element) {\r\n              return <option key={element.id} data-id={element.id}>{element.name}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n  \r\n        <br></br>\r\n  \r\n      <div id=\"checkboxtext\">\r\n        <h2>Tjek følgene</h2>\r\n        </div>\r\n        <p id=\"checks\">1. Hydrant åben <br></br>2. Maskine er sat i gear <br></br>3. Slange korrekt placeret <br></br>4. Aflæs tiden <br></br>5. Dyse valg korrekt</p>\r\n        <label className=\"container\">Jeg har tjekket overstående\r\n          <input onChange={function(){\r\n            //Set Checked Hook to \"Checked\" = true/false\r\n            setChecked(!checked)\r\n          }} type=\"checkbox\"></input>\r\n          <span className=\"checkmark\"></span>\r\n        </label>\r\n  \r\n      <button type=\"submit\" id=\"buttonstartmachine\">START VANDING</button>\r\n\r\n      </form>\r\n  );\r\n\r\n}\r\n\r\nexport default Startmachine;","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\showmachine.jsx",["79","80","81","82"],"import React, { useEffect, useState } from 'react';\r\n\r\nfunction Showmachine({shownMachine, setStage, notes}) {\r\n\r\n    const HandleClick = () => {\r\n        setStage(\"maintenance\")\r\n    }\r\n    \r\n    const CreateNote = () => {\r\n        var note = document.getElementById(\"createnoteinput\")\r\n        \r\n        var time = new Date()\r\n\r\n        time = time.toLocaleString(\"da-DK\", {\r\n            dateStyle: \"short\",\r\n            timeStyle: \"medium\"\r\n        });\r\n          \r\n        var tempTime = time.split(\" \");\r\n        var date = tempTime[0].split(\".\")\r\n        tempTime[0] = date[2] + \"-\" + date[1] + \"-\" + date[0]\r\n        time = tempTime.join(\" \");\r\n\r\n        var tempNote = {\r\n            machineid : shownMachine.id,\r\n            time : time,\r\n            note : note.value\r\n        }\r\n\r\n        fetch(\"http://10.10.60.161:5000/createnote\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(tempNote)\r\n        })\r\n        window.location.href = \"/\"\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <div id=\"shownmachine\">\r\n            <button id=\"backbutton\" onClick={HandleClick}>Tilbage</button>\r\n            <div id=\"allmachineattributes\">\r\n                <div className=\"machineattributes\">\r\n                    <h1 className=\"showmachineh1\">Maskine nr.</h1>\r\n                    <p>{shownMachine.id}</p>\r\n                </div>\r\n                <div className=\"machineattributes\">\r\n                    <h1 className=\"showmachineh1\">Pumpe navn</h1>\r\n                    <p>{shownMachine.pumpname == null ? \"Ingen pumpe\" : shownMachine.pumpname}</p>\r\n                </div>\r\n                <div className=\"machineattributes\">\r\n                    <h1 className=\"showmachineh1\">Tid tilbage</h1>\r\n                    <p>\r\n                        {shownMachine.time == null ? \"Ingen tid\" : new Date(shownMachine[\"time\"]).toLocaleString(\"da-DK\", {\r\n                            dateStyle: \"medium\",\r\n                            timeStyle: \"short\"\r\n                        })}\r\n                    </p>\r\n                </div>\r\n                <div className=\"machineattributes\">\r\n                    <h1 className=\"showmachineh1\">Aktivitet</h1>\r\n                    <p>{shownMachine.active == 0 ? \"Inaktiv\" : \"Aktiv\"}</p>\r\n                </div>\r\n            </div>\r\n            <div id=\"allaboutnotes\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault()\r\n                    CreateNote()\r\n                }}>\r\n                    <h2 id=\"createnotetext\">Tilføj vedligeholdelses note til maskine</h2>\r\n                    <label>Note:</label>\r\n                    <input id=\"createnoteinput\" type=\"text\" required></input>\r\n                    <button id=\"createnotebutton\" type=\"submit\">Opret note</button>\r\n                </form>\r\n                <div id=\"shownotes\">\r\n                    <table className=\"tables\" id=\"tablenotes\">\r\n                        <colgroup>\r\n                            <col style={{width: \"10%\"}}></col>\r\n                            <col style={{width: \"35%\"}}></col>\r\n                            <col style={{width: \"55%\"}}></col>\r\n                        </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Maskine nr.</th>\r\n                            <th>Oprettet dato</th>\r\n                            <th>Note</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {notes.filter(x => x.machineid == shownMachine.id).map(function(note)\r\n                            {\r\n                            var time = new Date(note[\"time\"]).toLocaleString(\"da-DK\", {\r\n                                dateStyle: \"medium\",\r\n                                timeStyle: \"short\"\r\n                            });\r\n\r\n                            return (\r\n                                <tr key={note[\"id\"]}>\r\n                                    <td>{note[\"machineid\"]}</td>\r\n                                    <td>{time}</td>\r\n                                    <td>{note[\"note\"]}</td>\r\n                                </tr>\r\n                            )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Showmachine;","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewstillgoing.jsx",["83"],"function Overviewstillgoing({stillgoingMachines, activePumps, stopMachine, stopPump}) {\r\n    return (\r\n    <div>\r\n        <h1 className=\"tablelabel\">Aktive vandinger</h1>\r\n        <table className=\"tables\" id=\"tableoverview\">\r\n        <colgroup>\r\n            <col style={{width: \"10%\"}}></col>\r\n            <col style={{width: \"24%\"}}></col>\r\n            <col style={{width: \"45%\"}}></col>\r\n            <col style={{width: \"10%\"}}></col>\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n            <th>Maskine nr.</th>\r\n            <th>Pumpe Navn</th>\r\n            <th>Færdig</th>\r\n            <th>Stop Vanding</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {stillgoingMachines.map(function(machine)\r\n            {\r\n            var time = new Date(machine[\"time\"]).toLocaleString(\"da-DK\", {\r\n                dateStyle: \"medium\",\r\n                timeStyle: \"short\"\r\n            });\r\n            \r\n            var pump = activePumps.find((pum) => {\r\n                return pum.name == machine.pumpname\r\n            })\r\n\r\n            return (\r\n                <tr key={machine[\"id\"]}>\r\n                <td>{machine[\"id\"]}</td>\r\n                <td>{machine[\"pumpname\"]}</td>\r\n                <td>{time}</td>\r\n                <td id=\"stopwateringbutton\" onClick={(event) => {\r\n\r\n                    var answer = window.confirm(\"Hvis du vil stoppe vanding tryk OK\")\r\n                    \r\n                    if (!answer === true) return;\r\n\r\n                    //var pumpnumber = \"+45\" + pump.number\r\n                    //var pumpstopcode = pump.stopcode\r\n                    //sendStopSMS(pumpnumber, pumpstopcode)\r\n                    \r\n                    stopMachine(machine)\r\n                    stopPump(pump)\r\n                    window.location.href=\"/\"\r\n                    }}>\r\n                <p id=\"stopwateringbuttontext\">S</p></td>\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Overviewstillgoing;","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewexpired.jsx",["84"],"function Overviewexpired ({expiredMachines, activePumps, stopMachine, stopPump}) {\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"tablelabel\">Færdige vandinger</h1>\r\n            <table className=\"tables\" id=\"tableoverview\">\r\n                <colgroup>\r\n                    <col style={{width: \"10%\"}}></col>\r\n                    <col style={{width: \"24%\"}}></col>\r\n                    <col style={{width: \"45%\"}}></col>\r\n                    <col style={{width: \"10%\"}}></col>\r\n                </colgroup>\r\n            <thead>\r\n            <tr>\r\n                <th>Maskine nr.</th>\r\n                <th>Pumpe Navn</th>\r\n                <th>Færdig</th>\r\n                <th>Stop Vanding</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {expiredMachines.map(function(machine)\r\n            {\r\n                var time = new Date(machine[\"time\"]).toLocaleString(\"da-DK\", {\r\n                dateStyle: \"medium\",\r\n                timeStyle: \"short\"\r\n                });\r\n                \r\n                var pump = activePumps.find((pum) => {\r\n                return pum.name == machine.pumpname\r\n                })\r\n\r\n                return (\r\n                <tr key={machine[\"id\"]}>\r\n                    <td>{machine[\"id\"]}</td>\r\n                    <td>{machine[\"pumpname\"]}</td>\r\n                    <td>{time}</td>\r\n                    <td id=\"stopwateringbutton\" onClick={(event) => {\r\n\r\n                        var answer = window.confirm(\"Hvis du vil stoppe vanding tryk OK\")\r\n                        \r\n                        if (!answer === true) return;\r\n\r\n                        //var pumpnumber = \"+45\" + pump.number\r\n                        //var pumpstopcode = pump.stopcode\r\n                        //sendStopSMS(pumpnumber, pumpstopcode)\r\n                        \r\n                        stopMachine(machine)\r\n                        stopPump(pump)\r\n                        window.location.href=\"/\"\r\n                    }}>\r\n                    <p id=\"stopwateringbuttontext\">S</p></td>\r\n                </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nexport default Overviewexpired","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\machinepark.jsx",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":66,"column":11,"nodeType":"107","messageId":"108","endLine":66,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":68,"column":42,"nodeType":"111","messageId":"112","endLine":68,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":253,"column":20,"nodeType":"111","messageId":"112","endLine":253,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":341,"column":15,"nodeType":"107","messageId":"115","endLine":341,"endColumn":21},{"ruleId":"109","severity":1,"message":"116","line":412,"column":82,"nodeType":"111","messageId":"112","endLine":412,"endColumn":84},{"ruleId":"109","severity":1,"message":"116","line":415,"column":79,"nodeType":"111","messageId":"112","endLine":415,"endColumn":81},{"ruleId":"117","severity":1,"message":"118","line":456,"column":17,"nodeType":"119","endLine":456,"endColumn":88},{"ruleId":"117","severity":1,"message":"118","line":459,"column":17,"nodeType":"119","endLine":459,"endColumn":97},{"ruleId":"117","severity":1,"message":"118","line":462,"column":17,"nodeType":"119","endLine":462,"endColumn":95},{"ruleId":"117","severity":1,"message":"118","line":465,"column":17,"nodeType":"119","endLine":465,"endColumn":98},{"ruleId":"117","severity":1,"message":"118","line":468,"column":17,"nodeType":"119","endLine":468,"endColumn":93},{"ruleId":"120","severity":1,"message":"121","line":484,"column":177,"nodeType":"122","endLine":484,"endColumn":204},{"ruleId":"113","severity":1,"message":"123","line":5,"column":10,"nodeType":"107","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":5,"column":16,"nodeType":"107","messageId":"115","endLine":5,"endColumn":23},{"ruleId":"113","severity":1,"message":"125","line":1,"column":28,"nodeType":"107","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"126","line":8,"column":12,"nodeType":"107","messageId":"115","endLine":8,"endColumn":23},{"ruleId":"109","severity":1,"message":"116","line":26,"column":23,"nodeType":"111","messageId":"112","endLine":26,"endColumn":25},{"ruleId":"113","severity":1,"message":"125","line":1,"column":10,"nodeType":"107","messageId":"115","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":23,"column":6,"nodeType":"129","endLine":23,"endColumn":8,"suggestions":"130"},{"ruleId":"109","severity":1,"message":"110","line":33,"column":27,"nodeType":"111","messageId":"112","endLine":33,"endColumn":29},{"ruleId":"113","severity":1,"message":"123","line":4,"column":10,"nodeType":"107","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":4,"column":16,"nodeType":"107","messageId":"115","endLine":4,"endColumn":23},{"ruleId":"113","severity":1,"message":"131","line":9,"column":12,"nodeType":"107","messageId":"115","endLine":9,"endColumn":24},{"ruleId":"113","severity":1,"message":"132","line":48,"column":15,"nodeType":"107","messageId":"115","endLine":48,"endColumn":25},{"ruleId":"113","severity":1,"message":"133","line":49,"column":15,"nodeType":"107","messageId":"115","endLine":49,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":83,"column":30,"nodeType":"111","messageId":"112","endLine":83,"endColumn":32},{"ruleId":"113","severity":1,"message":"134","line":1,"column":17,"nodeType":"107","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"125","line":1,"column":28,"nodeType":"107","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":65,"column":45,"nodeType":"111","messageId":"112","endLine":65,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":93,"column":60,"nodeType":"111","messageId":"112","endLine":93,"endColumn":62},{"ruleId":"109","severity":1,"message":"110","line":29,"column":33,"nodeType":"111","messageId":"112","endLine":29,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":30,"column":33,"nodeType":"111","messageId":"112","endLine":30,"endColumn":35},{"ruleId":"113","severity":1,"message":"134","line":1,"column":16,"nodeType":"107","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":16,"column":32,"nodeType":"111","messageId":"112","endLine":16,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":36,"column":29,"nodeType":"111","messageId":"112","endLine":36,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":62,"column":42,"nodeType":"111","messageId":"112","endLine":62,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":74,"column":14,"nodeType":"111","messageId":"112","endLine":74,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":81,"column":14,"nodeType":"111","messageId":"112","endLine":81,"endColumn":16},{"ruleId":"113","severity":1,"message":"135","line":90,"column":9,"nodeType":"107","messageId":"115","endLine":90,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":176,"column":38,"nodeType":"111","messageId":"112","endLine":176,"endColumn":40},{"ruleId":"109","severity":1,"message":"110","line":181,"column":41,"nodeType":"111","messageId":"112","endLine":181,"endColumn":43},{"ruleId":"109","severity":1,"message":"110","line":183,"column":12,"nodeType":"111","messageId":"112","endLine":183,"endColumn":14},{"ruleId":"105","severity":1,"message":"136","line":206,"column":9,"nodeType":"107","messageId":"108","endLine":206,"endColumn":14},{"ruleId":"105","severity":1,"message":"136","line":208,"column":9,"nodeType":"107","messageId":"108","endLine":208,"endColumn":14},{"ruleId":"105","severity":1,"message":"136","line":210,"column":9,"nodeType":"107","messageId":"108","endLine":210,"endColumn":14},{"ruleId":"105","severity":1,"message":"136","line":212,"column":9,"nodeType":"107","messageId":"108","endLine":212,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":264,"column":19,"nodeType":"119","endLine":264,"endColumn":156},{"ruleId":"137","severity":1,"message":"138","line":304,"column":19,"nodeType":"119","endLine":304,"endColumn":139},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-redeclare","'anchor' is already defined.","Identifier","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'months' is assigned a value but never used.","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'useState' is defined but never used.","'sendStopSMS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNotes'. Either include it or remove the dependency array. If 'setNotes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["141"],"'sendStartSMS' is defined but never used.","'pumpnumber' is assigned a value but never used.","'pumpstartcode' is assigned a value but never used.","'useEffect' is defined but never used.","'findEditPump' is assigned a value but never used.","'modal' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [setNotes]",{"range":"144","text":"145"},[512,514],"[setNotes]"]