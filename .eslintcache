[{"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\index.js":"1","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\App.jsx":"2","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overview.jsx":"3","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\maintenance.jsx":"4","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\startmachine.jsx":"5","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\showmachine.jsx":"6","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewstillgoing.jsx":"7","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewexpired.jsx":"8","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\machinepark.jsx":"9","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\loginform.jsx":"10"},{"size":234,"mtime":1615901222907,"results":"11","hashOfConfig":"12"},{"size":16213,"mtime":1622444213108,"results":"13","hashOfConfig":"12"},{"size":1275,"mtime":1621940523816,"results":"14","hashOfConfig":"12"},{"size":2265,"mtime":1621940520521,"results":"15","hashOfConfig":"12"},{"size":3629,"mtime":1622444676282,"results":"16","hashOfConfig":"12"},{"size":5393,"mtime":1622443303058,"results":"17","hashOfConfig":"12"},{"size":2167,"mtime":1622444670187,"results":"18","hashOfConfig":"12"},{"size":2218,"mtime":1618985281407,"results":"19","hashOfConfig":"12"},{"size":22379,"mtime":1621940505297,"results":"20","hashOfConfig":"12"},{"size":2048,"mtime":1622195651638,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"losjx2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\index.js",[],["48","49"],"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\App.jsx",["50","51","52","53","54","55","56","57","58","59","60","61","62","63"],"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overview.jsx",["64","65"],"import React, { useEffect, useState } from 'react';\r\nimport Overviewstillgoing from './overviewstillgoing';\r\nimport Overviewexpired from './overviewexpired';\r\n\r\nfunction Overview({activeMachines, activePumps, stopMachine, stopPump, setSubmitted, expiredMachines, stillgoingMachines}) {\r\n\r\n\r\n  function sendStopSMS(pumpnumber, pumpstopcode){\r\n    fetch(\"http://10.10.51.36:5000/sendsms\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        number: pumpnumber,\r\n        message: pumpstopcode\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n    \r\n  }, [])\r\n\r\n  if (expiredMachines != 0) {\r\n    return (\r\n      <div>\r\n        <Overviewexpired expiredMachines = {expiredMachines} activePumps = {activePumps} stopMachine = {stopMachine} stopPump = {stopPump}/>\r\n        <Overviewstillgoing stillgoingMachines = {stillgoingMachines} activePumps = {activePumps} stopMachine = {stopMachine} stopPump = {stopPump} sendStopSMS={sendStopSMS}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Overviewstillgoing stillgoingMachines = {stillgoingMachines} activePumps = {activePumps} stopMachine = {stopMachine} stopPump = {stopPump} sendStopSMS={sendStopSMS}/>\r\n  )\r\n}\r\n\r\nexport default Overview;\r\n","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\maintenance.jsx",["66","67","68"],"import { useState, useEffect } from \"react\"\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Maintenance({history, allMachines, setStage, setShownMachine, setNotes}){\r\n\r\n  const HandleClick = (machine) => {\r\n\r\n    setShownMachine(machine)\r\n    history.push(\"/showmachine\")\r\n\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n    fetch(\"http://10.10.51.36:5000/getnotes\")\r\n      .then(function(data) {\r\n        return data.json();\r\n      })\r\n      .then(function(json) {\r\n        setNotes(json)     \r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [])\r\n\r\n  return(\r\n    <div id=\"maintenance\">\r\n      <h1 id=\"maintenancetext\">Tryk på en boks for at tilgå maskinen</h1>\r\n      {allMachines.map((machine) => {\r\n        var color\r\n        var active\r\n        var pumpname\r\n        var time\r\n        if(machine.active == 1) {\r\n          color = \"#42CB6B\"\r\n          active = \"Aktiv\"\r\n          pumpname = machine.pumpname\r\n          time = new Date(machine[\"time\"]).toLocaleString(\"da-DK\", {\r\n            dateStyle: \"medium\",\r\n            timeStyle: \"short\"\r\n        });\r\n        }\r\n        else{\r\n          color = \"#DF4848\"\r\n          active = \"Inaktiv\"\r\n          pumpname = \"Ingen pumpe\"\r\n          time = \"Ingen tid\"\r\n        }\r\n      return(\r\n        <button id=\"maintenanceboxes\" onClick={() => {HandleClick(machine)}}>\r\n            <div>\r\n              <h1 id=\"machineid\">\r\n                {machine.id}\r\n              </h1>\r\n              <div id=\"hid-box\" style={{background: color}}>\r\n                <p id=\"active\">\r\n                  {active}\r\n                </p>\r\n                <div id=\"maintenanceboxhover\">\r\n                  <p className=\"maintenanceboxheading\">\r\n                    Pumpenavn\r\n                  </p>\r\n                  <h3 className=\"maintenanceboxtext\">\r\n                    {pumpname}\r\n                  </h3>\r\n                  <p className=\"maintenanceboxheading\">\r\n                    Stop tidspunkt\r\n                  </p>\r\n                  <h3 className=\"maintenanceboxtext\">\r\n                    {time}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </button>\r\n      )\r\n    })}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Maintenance);","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\startmachine.jsx",["69","70","71","72","73","74"],"import React, { useEffect, useState } from 'react';\r\n\r\nfunction Startmachine({setSubmitted, setStartmachine, activeMachines, inactivePumps, inactiveMachines, updatePump}){\r\n  const [data, setData] = useState([]);\r\n  const [checked, setChecked] = useState(false)\r\n  const [machine, setMachine] = useState(\"\")\r\n  const [pump, setPump] = useState(\"\")\r\n\r\n  function sendStartSMS(pumpnumber, pumpstartcode){\r\n    fetch(\"http://10.10.51.36:5000/sendsms\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        number: pumpnumber,\r\n        message: pumpstartcode\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n  }, [])\r\n\r\n  return(\r\n      <form className=\"select\" id=\"formstartmachine\" onSubmit={function(event){\r\n\r\n        // Prevents default behavior (Getting put at another site)\r\n        event.preventDefault();\r\n\r\n\r\n        // Check if Checkbox is true or false\r\n        if(!checked) return;\r\n\r\n\r\n        // Checks if a machine and pump is selected\r\n        if(machine && pump){\r\n          // MAKE MACHINE OBJECT\r\n          updatePump(pump)\r\n\r\n          // SET PUMP TO ACTIVE ---- pump.id\r\n          \r\n          \r\n          \r\n          \r\n          // UDFYLD RIGTIG DATA TIL SMS\r\n          var pumpnumber = \"45\" + pump.number\r\n          var pumpstartcode = pump.startcode\r\n          //sendStartSMS(pumpnumber, pumpstartcode)\r\n          \r\n          // Sets \"Submitted\" hook to true\r\n          localStorage.setItem(\"machine\", machine)\r\n          localStorage.setItem(\"pump\", pump.name)\r\n          localStorage.setItem(\"hasstarted\", \"true\")\r\n          setSubmitted(true)\r\n        };\r\n      }}>\r\n        <div id=\"choosemachine\">\r\n          <label htmlFor=\"chosenmachine\">Vælg en maskine</label>\r\n          <br></br>\r\n          <select name=\"chosenmachine\" id=\"chosenmachine\" onChange={function(event){\r\n            setMachine(event.target.value);\r\n          }}>\r\n            <option selected disabled hidden></option>\r\n            {\r\n            inactiveMachines.map(function(element) {\r\n              return <option key={element.id}>{element.id}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n  \r\n        <br></br>\r\n  \r\n        <div id=\"choosepump\">\r\n          <label htmlFor=\"\">Vælg en pumpe</label>\r\n          <br></br>\r\n          <select name=\"chosenpump\" id=\"chosenpump\" onChange={function(event){\r\n            var options = event.target.children;\r\n            var option = options[event.target.selectedIndex];\r\n\r\n            setPump(inactivePumps.find((pump) => {\r\n              return pump.id == option.dataset.id\r\n            }));\r\n          }}>\r\n            <option selected disabled hidden></option>\r\n            {inactivePumps.map(function(element) {\r\n              return <option key={element.id} data-id={element.id}>{element.name}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n  \r\n        <br></br>\r\n  \r\n      <div id=\"checkboxtext\">\r\n        <h2>Tjek følgene</h2>\r\n        </div>\r\n        <p id=\"checks\">1. Hydrant åben <br></br>2. Maskine er sat i gear <br></br>3. Slange korrekt placeret <br></br>4. Aflæs tiden <br></br>5. Dyse valg korrekt</p>\r\n        <label className=\"container\">Jeg har tjekket overstående\r\n          <input onChange={function(){\r\n            //Set Checked Hook to \"Checked\" = true/false\r\n            setChecked(!checked)\r\n          }} type=\"checkbox\"></input>\r\n          <span className=\"checkmark\"></span>\r\n        </label>\r\n  \r\n      <button type=\"submit\" id=\"buttonstartmachine\">START VANDING</button>\r\n\r\n      </form>\r\n  );\r\n\r\n}\r\n\r\nexport default Startmachine;","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\showmachine.jsx",["75","76","77","78"],"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewstillgoing.jsx",["79","80","81"],"C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\overviewexpired.jsx",["82"],"function Overviewexpired ({expiredMachines, activePumps, stopMachine, stopPump}) {\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"tablelabel\">Færdige vandinger</h1>\r\n            <table className=\"tables\" id=\"tableoverview\">\r\n                <colgroup>\r\n                    <col style={{width: \"10%\"}}></col>\r\n                    <col style={{width: \"24%\"}}></col>\r\n                    <col style={{width: \"45%\"}}></col>\r\n                    <col style={{width: \"10%\"}}></col>\r\n                </colgroup>\r\n            <thead>\r\n            <tr>\r\n                <th>Maskine nr.</th>\r\n                <th>Pumpe Navn</th>\r\n                <th>Færdig</th>\r\n                <th>Fjern Vanding</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {expiredMachines.map(function(machine)\r\n            {\r\n                var time = new Date(machine[\"time\"]).toLocaleString(\"da-DK\", {\r\n                dateStyle: \"medium\",\r\n                timeStyle: \"short\"\r\n                });\r\n                \r\n                var pump = activePumps.find((pum) => {\r\n                return pum.name == machine.pumpname\r\n                })\r\n\r\n                return (\r\n                <tr key={machine[\"id\"]}>\r\n                    <td style={{background: \"#DF4848\"}}>{machine[\"id\"]}</td>\r\n                    <td>{machine[\"pumpname\"]}</td>\r\n                    <td>{time}</td>\r\n                    <td id=\"stopwateringbutton\" onClick={(event) => {\r\n\r\n                        var answer = window.confirm(\"Hvis du vil stoppe vanding tryk OK\")\r\n                        \r\n                        if (!answer === true) return;\r\n\r\n                        //var pumpnumber = \"+45\" + pump.number\r\n                        //var pumpstopcode = pump.stopcode\r\n                        //sendStopSMS(pumpnumber, pumpstopcode)\r\n                        \r\n                        stopMachine(machine)\r\n                        stopPump(pump)\r\n                        window.location.href=\"/\"\r\n                    }}>\r\n                    <h4>FJERN</h4></td>\r\n                </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n}\r\nexport default Overviewexpired","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\machinepark.jsx",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, {useEffect, useState} from 'react';\r\n\r\nfunction Addmachines({allPumps, allMachines}){\r\n\r\n  const [currentPump, setCurrentPump] = useState({\r\n    name: \"\",\r\n    number: \"\",\r\n    startcode: \"\",\r\n    stopcode: \"\"\r\n  })\r\n  const [currentMachine, setCurrentMachine] = useState({\r\n  })\r\n\r\n  const RemoveMachine = () => {\r\n    if (currentMachine) {\r\n      if(currentMachine.active == 1) {\r\n        alert(\"Du kan ikke slette en aktiv maskine\")\r\n        return\r\n      }\r\n\r\n      fetch(\"http://10.10.51.36:5000/removemachine\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }, body: JSON.stringify(currentMachine)\r\n      })\r\n      window.location.href = \"/\"\r\n    }\r\n    else {\r\n      alert(\"Ingen maskine valgt\")\r\n    }\r\n  }\r\n\r\n  const UpdateMachine = () =>{\r\n    var id = document.getElementById(\"editmachineid\");\r\n    var model = document.getElementById(\"editmachinemodel\")\r\n    var nozzle = document.getElementById(\"editmachinenozzle\")\r\n\r\n    if (currentMachine.active == 1) {\r\n      alert(\"Du kan ikke rette en aktiv maskine\")\r\n      return;\r\n    }\r\n\r\n    var tempMachine = {\r\n      id: id.value,\r\n      model: model.value,\r\n      nozzle: nozzle.value,\r\n      active: 0\r\n    }\r\n\r\n    fetch(\"http://10.10.51.36:5000/updatemachine\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempMachine)\r\n    })\r\n   window.location.href = \"/\"\r\n  }\r\n\r\n  const RemovePump = () => {\r\n    if(currentPump) {\r\n      if(currentPump.active == 1) {\r\n        alert(\"Du kan ikke slette en aktiv pumpe\")\r\n        return\r\n      }\r\n\r\n      fetch(\"http://10.10.51.36:5000/removepump\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(currentPump)\r\n      })\r\n      window.location.href = \"/\"\r\n    }\r\n    else {\r\n      alert(\"Ingen pumpe valgt\")\r\n    }\r\n  }\r\n\r\n  const validatePump = (name, number) => {\r\n    var re = new RegExp(\"[0-9]{8}$\")\r\n\r\n    if (number.value.length !== 8) {\r\n      alert(\"Nummeret skal være 8 cifre langt!\")\r\n      return;\r\n    }\r\n    if (re.test(number.value.toString()) == false) {\r\n      alert(\"Nummeret må kun være tal\")\r\n      return;\r\n    }\r\n\r\n    // Variables for name (na), and number (nu)\r\n    // Checks if name and number already exists\r\n    var na = allPumps.some(a => a.name === name.value)\r\n    var nu = allPumps.some(a => a.number === number.value)\r\n\r\n    // If name or number exists, make an alert with the problem, and return out / stop the function\r\n    if (name.value !== currentPump.name){\r\n      if (na == true){\r\n        alert(\"Pumpens navn findes allerede\")\r\n        return;\r\n      }\r\n    }\r\n    \r\n    if (number.value !== currentPump.number){\r\n      if (nu == true){\r\n        alert(\"Pumpens tlf nummer findes allerede\")\r\n        return;\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  const findEditPump = () => {\r\n    var findPumpName = document.getElementById(\"findeditpumpname\");\r\n    \r\n    var name = document.getElementById(\"editpumpname\");\r\n    var number = document.getElementById(\"editpumpnumber\");\r\n    var startcode = document.getElementById(\"editpumpstartcode\")\r\n    var stopcode = document.getElementById(\"editpumpstopcode\")\r\n\r\n    var pump = allPumps.find((pump) => {\r\n      return pump[\"name\"] === findPumpName.value;\r\n    })\r\n\r\n    if (pump) {\r\n      setCurrentPump(pump)\r\n      name.value = pump.name\r\n      number.value = pump.number\r\n      startcode.value = pump.startcode\r\n      stopcode.value = pump.stopcode\r\n    } else {\r\n      alert(\"Pumpen findes ikke, har du skrevet det rigtigt?\")\r\n    }\r\n    \r\n  }\r\n\r\n  const updatePump = () =>{\r\n    var name = document.getElementById(\"editpumpname\");\r\n    var number = document.getElementById(\"editpumpnumber\");\r\n    var startcode = document.getElementById(\"editpumpstartcode\")\r\n    var stopcode = document.getElementById(\"editpumpstopcode\")\r\n\r\n    var result = validatePump(name, number)\r\n    if (result !== true) return;\r\n\r\n    var tempPump = {\r\n      id: currentPump.id,\r\n      name: name.value,\r\n      number: number.value,\r\n      active: 0,\r\n      startcode: startcode.value,\r\n      stopcode: stopcode.value\r\n    }\r\n\r\n    fetch(\"http://10.10.51.36:5000/updatepump\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempPump)\r\n    })\r\n   window.location.href = \"/\"\r\n  }\r\n\r\n  const createPump = () =>{\r\n    var name = document.getElementById(\"createpumpname\")\r\n    var number = document.getElementById(\"createpumpnumber\")\r\n    var startcode = document.getElementById(\"createpumpstartcode\")\r\n    var stopcode = document.getElementById(\"createpumpstopcode\")\r\n\r\n    var result = validatePump(name, number)\r\n    if (result !== true) return;\r\n\r\n    // Temporary pump object that gets sent to the server to insert into the database\r\n    var tempPump = {\r\n      name: name.value,\r\n      number: number.value,\r\n      active: 0,\r\n      startcode: startcode.value,\r\n      stopcode: stopcode.value\r\n    } \r\n  \r\n    // Sends tempPump to server\r\n    fetch(\"http://10.10.51.36:5000/createpump\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempPump)\r\n    })\r\n    window.location.href = \"/\"\r\n  }\r\n\r\n  const createMachine = () =>{\r\n    var id = document.getElementById(\"createmachineid\")\r\n\r\n    var re = new RegExp(/^[0-9]+$/)\r\n\r\n    if (re.test(id.value.toString()) == false) {\r\n      alert(\"Nummeret må kun være tal\")\r\n      return;\r\n    }\r\n\r\n    var nu = allMachines.some(a => a.id == id.value)\r\n    \r\n    if (nu == true) {\r\n      alert(\"Maskine nummeret findes allerede\")\r\n      return;\r\n    }\r\n\r\n    var tempMachine = {\r\n      id: id.value,\r\n      active: 0\r\n    } \r\n  \r\n    fetch(\"http://10.10.51.36:5000/createmachine\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempMachine)\r\n    })\r\n    window.location.href=\"/\"\r\n  }\r\n\r\n  const closeModal = () => {\r\n    var modal = document.getElementById(\"modal\")\r\n    modal.style.display = \"none\"\r\n    var modal = document.getElementById(\"modal2\")\r\n    modal.style.display = \"none\"\r\n    var modal = document.getElementById(\"modal3\")\r\n    modal.style.display = \"none\"\r\n    var modal = document.getElementById(\"modal4\")\r\n    modal.style.display = \"none\"\r\n    var modal = document.getElementById(\"modal5\")\r\n    modal.style.display = \"none\"\r\n    var modal = document.getElementById(\"modal6\")\r\n    modal.style.display = \"none\"\r\n  }\r\n\r\n  return(\r\n    \r\n    <div>\r\n      <div className=\"machineparktableheaders\">\r\n      <h1 className=\"machineparktableheaderstext\">Pumper</h1>\r\n      <h1 className=\"machineparktableheadersplus\" onClick={() => {\r\n        var modal = document.getElementById(\"modal4\")\r\n        modal.style.display =\"block\"\r\n      }}>+</h1>\r\n      </div>\r\n      <table className=\"machineparktables\" id=\"tablemachineparkpumps\">\r\n        <colgroup>\r\n        <col style={{width: \"25%\"}}></col>\r\n        <col style={{width: \"25%\"}}></col>\r\n        <col style={{width: \"20%\"}}></col>\r\n        <col style={{width: \"20%\"}}></col>\r\n        <col style={{width: \"10%\"}}></col>\r\n        </colgroup>\r\n        <thead>\r\n           <tr>\r\n             <th>Navn</th>\r\n             <th>Nummer</th>\r\n             <th>Startkode</th>\r\n             <th>Stopkode</th>\r\n             <th></th>\r\n           </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allPumps.map(function(data) {\r\n            return (\r\n              <tr key={data[\"id\"]}>\r\n                <td>{data[\"name\"]}</td>\r\n                <td>{data[\"number\"]}</td>\r\n                <td>{data[\"startcode\"]}</td>\r\n                <td>{data[\"stopcode\"]}</td>\r\n                <td onClick={() => {\r\n                  setCurrentPump(data)\r\n                  var modal = document.getElementById(\"modal\")\r\n                  var name = document.getElementById(\"editpumpname\")\r\n                  var number = document.getElementById(\"editpumpnumber\")\r\n                  var startcode = document.getElementById(\"editpumpstartcode\")\r\n                  var stopcode = document.getElementById(\"editpumpstopcode\")\r\n                  name.value = data.name\r\n                  number.value = data.number\r\n                  startcode.value = data.startcode\r\n                  stopcode.value = data.stopcode\r\n                  modal.style.display = \"block\"\r\n                    }}>\r\n                  <img src=\"https://icons-for-free.com/iconfiles/png/512/draw+edit+pen+pencil+text+write+icon-1320162307919760358.png\" style={{width: 24}}></img>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      \r\n      <div className=\"machineparktableheaders\">\r\n      <h1 className=\"machineparktableheaderstext\">Maskiner</h1>\r\n      <h1 className=\"machineparktableheadersplus\" onClick={() => {\r\n        var modal = document.getElementById(\"modal5\")\r\n        modal.style.display = \"block\"\r\n      }}>+</h1>\r\n      </div>\r\n      <table className=\"machineparktables\" id=\"tablemachineparkmachines\">\r\n        <colgroup>\r\n        <col style={{width: \"25%\"}}></col>\r\n        <col style={{width: \"25%\"}}></col>\r\n        <col style={{width: \"25%\"}}></col>\r\n        <col style={{width: \"15%\"}}></col>\r\n        <col style={{width: \"10%\"}}></col>\r\n        </colgroup>\r\n        <thead>\r\n           <tr>\r\n             <th>Maskine nr.</th>\r\n             <th>Model</th>\r\n             <th>Dyse størrelse</th>\r\n             <th></th>\r\n             <th></th>\r\n           </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allMachines.map(function(data) {\r\n            return (\r\n              <tr key={data[\"id\"]}>\r\n                <td>{data[\"id\"]}</td>\r\n                <td>{data[\"model\"]}</td>\r\n                <td>{data[\"nozzle\"]}</td>\r\n                <td></td>\r\n                <td onClick={(event) => {\r\n                  setCurrentMachine(data)\r\n                  var id = document.getElementById(\"editmachineid\")\r\n                  var model = document.getElementById(\"editmachinemodel\")\r\n                  var nozzle = document.getElementById(\"editmachinenozzle\")\r\n                  id.value = data.id\r\n                  model.value = data.model\r\n                  nozzle.value = data.nozzle\r\n                  var modal = document.getElementById(\"modal2\")\r\n                  setCurrentMachine(data)\r\n                  modal.style.display = \"block\"\r\n                    }}>\r\n                  <img src=\"https://icons-for-free.com/iconfiles/png/512/draw+edit+pen+pencil+text+write+icon-1320162307919760358.png\" style={{width: 24}}></img>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className =\"modal\" id=\"modal\">\r\n        <form className =\"modalforms\" id=\"pumpmodal\" onSubmit={function(event){\r\n            event.preventDefault();\r\n            updatePump();\r\n          }}>\r\n            <div className=\"modallabelbox\">\r\n              <label for=\"editpumpname\">\r\n              <span>Navn</span><input type=\"text\" className=\"bigmodalinputs\" id=\"editpumpname\" name=\"editpumpname\" required></input><br></br>\r\n              </label>\r\n              <label for=\"editpumpnumber\">\r\n              <span>Nummer</span><input type=\"text\" className=\"modalinputs\" id=\"editpumpnumber\" name=\"editpumpnumber\" required></input><br></br>\r\n              </label>\r\n              <label for=\"editpumpstartcode\">\r\n              <span>Startcode</span><input type=\"text\" className=\"modalinputs\" id=\"editpumpstartcode\" name=\"editpumpstartcode\" required></input><br></br>\r\n              </label>\r\n              <label for=\"editpumpstopcode\">\r\n              <span>Stopcode</span><input type=\"text\" className=\"modalinputs\" id=\"editpumpstopcode\" name=\"editpumpstopcode\" required></input><br></br>\r\n              </label>\r\n            </div>\r\n            <span className=\"removemodalbuttonspan\"></span><button className=\"removemodalbutton\" id=\"removepumpbutton\" type=\"button\" onClick={function(event){\r\n              event.preventDefault();\r\n              var modal = document.getElementById(\"modal\")\r\n              modal.style.display = \"none\"\r\n              var modal3 = document.getElementById(\"modal3\")\r\n              modal3.style.display = \"block\"\r\n            }}>Slet Pumpe</button>\r\n            <div className=\"modalbuttonbox\">\r\n              <button className=\"cancelmodalbutton\" type=\"button\" onClick={() => {closeModal()}}>Anuller</button>\r\n              <button className=\"modalbuttons\" id=\"updatemodalbutton\" type=\"submit\">Gem</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n      <div className =\"modal\" id=\"modal2\">\r\n        <form className =\"modalforms\" id=\"machinemodal\" onSubmit={function(event){\r\n            event.preventDefault();\r\n            UpdateMachine();\r\n          }}>\r\n            <div className=\"modallabelbox\">\r\n              <label for =\"editmachineid\">\r\n                <span>Maskine nr.</span><input type=\"test\" readOnly=\"true\" className=\"bigmodalinputs\" id=\"editmachineid\" name=\"editmachineid\" required></input><br></br>\r\n              </label>\r\n              <label for=\"editpumpname\">\r\n              <span>Model</span><input type=\"text\" className=\"modalinputs\" id=\"editmachinemodel\" name=\"editmachinemodel\"></input><br></br>\r\n              </label>\r\n              <label for=\"editpumpnumber\">\r\n              <span>Dyse</span><input type=\"text\" className=\"modalinputs\" id=\"editmachinenozzle\" name=\"editmachinenozzle\"></input><br></br>\r\n              </label>\r\n            </div>\r\n            <span className=\"removemodalbuttonspan\"></span><button className=\"removemodalbutton\" id=\"removemachinebutton\" type=\"button\" onClick={function(event){\r\n              event.preventDefault();\r\n              var modal = document.getElementById(\"modal2\")\r\n              modal.style.display = \"none\"\r\n              var modal6 = document.getElementById(\"modal6\")\r\n              modal6.style.display = \"block\"\r\n            }}>Slet Maskine</button>\r\n            <div className=\"modalbuttonbox\">\r\n              <button className=\"cancelmodalbutton\" type=\"button\" onClick={() => {closeModal()}}>Anuller</button>\r\n              <button className=\"modalbuttons\" id=\"updatemodalbutton\" type=\"submit\">Gem</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"modal\" id=\"modal6\">\r\n        <form className =\"modalforms\" id=\"removemachinemodal\" onSubmit={function(event){\r\n            event.preventDefault();\r\n            RemoveMachine();\r\n          }}>\r\n            <h1 className=\"labelremovemodal\">Slet maskine {currentMachine.id}?</h1>\r\n            <div className=\"modalbuttonbox\">\r\n              <button className=\"cancelmodalbutton\" id=\"cancelmachinemodal\" type=\"button\" onClick={() => {closeModal()}}>Anuller</button>\r\n              <button className=\"removemodalbutton\" id=\"removemachinemodalbutton\" type=\"submit\">Slet Maskine</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"modal\" id=\"modal3\">\r\n        <form className =\"modalforms\" id=\"removepumpmodal\" onSubmit={function(event){\r\n            event.preventDefault();\r\n            RemovePump();\r\n          }}>\r\n            <h1 className=\"labelremovemodal\">Slet {currentPump.name}?</h1>\r\n            <div className=\"modalbuttonbox\">\r\n              <button className=\"cancelmodalbutton\" id=\"cancelpumpmodal\" type=\"button\" onClick={() => {closeModal()}}>Anuller</button>\r\n              <button className=\"removemodalbutton\" id=\"removepumpmodalbutton\" type=\"submit\">Slet Pumpe</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n      <div className =\"modal\" id=\"modal4\">\r\n        <form className =\"modalforms\" id=\"createpumpmodal\" onSubmit={function(event){\r\n            event.preventDefault();\r\n            createPump();\r\n          }}>\r\n            <h1 id=\"createpumpmodaltext\">Opret ny pumpe</h1>\r\n            <div id=\"createpumpmodallabelbox\">\r\n              <input type=\"text\" className=\"bigmodalinputs\" id=\"createpumpname\" name=\"createpumpname\" placeholder=\"Navn\" required></input><br></br>\r\n              <input type=\"text\" className=\"createpumpmodalinputs\" id=\"createpumpnumber\" name=\"createpumpnumber\" placeholder=\"Nummer\" required></input><br></br>\r\n              <input type=\"text\" className=\"createpumpmodalinputs\" id=\"createpumpstartcode\" name=\"createpumpstartcode\" placeholder=\"Startkode\" required></input><br></br>\r\n              <input type=\"text\" className=\"createpumpmodalinputs\" id=\"createpumpstopcode\" name=\"createpumpstopcode\" placeholder=\"Stopkode\" required></input><br></br>\r\n            </div>\r\n            <div className=\"modalbuttonbox\" id=\"createpumpmodalbuttonbox\">\r\n              <button className=\"cancelmodalbutton\" id=\"closemodalbutton\" type=\"button\" onClick={() => {closeModal()}}>Anuller</button>\r\n              <button className=\"modalbuttons\" id=\"updatemodalbutton\" type=\"submit\">Gem</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n      <div className =\"modal\" id=\"modal5\">\r\n        <form className =\"modalforms\" id=\"createmachinemodal\" onSubmit={function(event){\r\n            event.preventDefault();\r\n            createMachine();\r\n          }}>\r\n            <h1 id=\"createmachinemodaltext\">Opret ny maskine</h1>\r\n              <input type=\"text\" className=\"modalinputs\" id=\"createmachineid\" name=\"createmachineid\" placeholder=\"Nr\" required></input><br></br>\r\n              <div className=\"modalbuttonbox\" id=\"createpumpmodalbuttonbox\">\r\n                <button className=\"cancelmodalbutton\" id=\"closemodalbutton\" type=\"button\" onClick={() => {closeModal()}}>Anuller</button>\r\n                <button className=\"modalbuttons\" id=\"updatemodalbutton\" type=\"submit\">Gem</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    // <div id=\"allforms\">\r\n    //   <form className =\"forms\" id=\"createpump\" onSubmit={function(event){\r\n    //     event.preventDefault();\r\n    //     createPump();\r\n    //   }}>\r\n    //     <h2>Opret pumpe</h2>\r\n    //     <label>Pumpe navn </label>\r\n    //     <input type=\"text\" id=\"createpumpname\" name=\"createpumpname\"></input><br></br>\r\n    //     <label>Pumpe nummer </label>\r\n    //     <input type=\"text\" id=\"createpumpnumber\" name=\"createpumpnumber\"></input><br></br>\r\n    //     <label>Startkode </label>\r\n    //     <input type=\"text\" id=\"createpumpstartcode\" name=\"createpumpstartcode\"></input><br></br>\r\n    //     <label>Stopkode </label>\r\n    //     <input type=\"text\" id=\"createpumpstopcode\" name=\"createpumpstopcode\"></input><br></br>\r\n    //     <button className=\"createandupdatebuttons\" type=\"submit\">OPRET</button>\r\n    //   </form>\r\n\r\n    //   <form className =\"forms\" id=\"createmachine\" onSubmit={function(event){\r\n    //     event.preventDefault();\r\n    //     createMachine();\r\n    //   }}>\r\n    //     <h2>Opret maskine</h2>\r\n    //     <label>Maskine nr. </label>\r\n    //     <input type=\"text\" id=\"createmachineid\" name=\"createmachineid\"></input><br></br>\r\n    //     <button className=\"createandupdatebuttons\" type=\"submit\">OPRET</button>\r\n    //   </form>\r\n\r\n    //   <form className =\"forms\" id=\"editpump\" onSubmit={function(event){\r\n    //     event.preventDefault();\r\n    //     updatePump();\r\n    //   }}>\r\n    //     <h2>Find/Rediger pumpe</h2>\r\n    //     <input type=\"text\" id=\"findeditpumpname\" name=\"findeditpumpname\"></input><br></br>\r\n    //     <button type=\"button\" className=\"createandupdatebuttons\" onClick={() => findEditPump()}>FIND PUMPE</button><br></br>\r\n    //     <label>Pumpe navn </label>\r\n    //     <input type=\"text\" id=\"editpumpname\" name=\"editpumpname\" required></input><br></br>\r\n    //     <label>Pumpe nummer </label>\r\n    //     <input type=\"text\" id=\"editpumpnumber\" name=\"editpumpnumber\" required></input><br></br>\r\n    //     <label>Pumpe startcode </label>\r\n    //     <input type=\"text\" id=\"editpumpstartcode\" name=\"editpumpstartcode\" required></input><br></br>\r\n    //     <label>Pumpe stopcode </label>\r\n    //     <input type=\"text\" id=\"editpumpstopcode\" name=\"editpumpstopcode\" required></input><br></br>\r\n    //     <button className=\"createandupdatebuttons\" type=\"submit\">OPDATER</button>\r\n    //   </form>\r\n\r\n\r\n    //   <form className=\"forms\" onSubmit={\r\n    //     function(event){\r\n    //       event.preventDefault()\r\n    //       RemovePump()\r\n    //     }\r\n    //   }>\r\n    //     <div className=\"removeselector\" id=\"removepump\">\r\n    //       <label htmlFor=\"\">Slet pumpe</label>\r\n    //       <br></br>\r\n    //       <select name=\"chosenpump\" id=\"chosenpump\" onChange={function(event){\r\n    //         var options = event.target.children;\r\n    //         var option = options[event.target.selectedIndex];\r\n\r\n    //         setPump(allPumps.find((pump) => {\r\n    //           return pump.id == option.dataset.id\r\n    //         }));\r\n    //       }}>\r\n    //         <option selected disabled hidden></option>\r\n    //         {allPumps.map(function(element) {\r\n    //           return <option key={element.id} data-id={element.id}>{element.name}</option>\r\n    //         })}\r\n    //       </select>\r\n          \r\n    //       <button className=\"createandupdatebuttons\" type=\"submit\">FJERN PUMPE</button>\r\n    //     </div>\r\n    //   </form>\r\n\r\n    //   <form className=\"forms\" onSubmit={\r\n    //     function(event){\r\n    //       event.preventDefault()\r\n    //       RemoveMachine()}\r\n    //   }>\r\n    //     <div className=\"removeselector\" id=\"removemachine\">\r\n    //       <label htmlFor=\"\">Slet maskine</label>\r\n    //       <br></br>\r\n    //       <select name=\"chosenmachine\" id=\"chosenmachine\" onChange={function(event){\r\n    //         var options = event.target.children;\r\n    //         var option = options[event.target.selectedIndex];\r\n\r\n    //         setMachine(allMachines.find((machine) => {\r\n    //           return machine.id == option.dataset.id\r\n    //         }));\r\n    //       }}>\r\n    //         <option selected disabled hidden></option>\r\n    //         {allMachines.map(function(element) {\r\n    //           return <option key={element.id} data-id={element.id}>{element.id}</option>\r\n    //         })}\r\n    //       </select>\r\n          \r\n    //         <button className=\"createandupdatebuttons\" type=\"submit\">FJERN MASKINE</button>\r\n          \r\n    //     </div>\r\n    //   </form>\r\n    // </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Addmachines;","C:\\Users\\johan\\OneDrive\\Documents\\GitHub\\Markvanding\\src\\components\\loginform.jsx",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":68,"column":18,"nodeType":"108","messageId":"109","endLine":68,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":81,"column":11,"nodeType":"112","messageId":"113","endLine":81,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":83,"column":42,"nodeType":"108","messageId":"109","endLine":83,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":254,"column":47,"nodeType":"108","messageId":"109","endLine":254,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":262,"column":20,"nodeType":"108","messageId":"109","endLine":262,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":330,"column":8,"nodeType":"116","endLine":330,"endColumn":10,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":351,"column":15,"nodeType":"112","messageId":"120","endLine":351,"endColumn":21},{"ruleId":"106","severity":1,"message":"121","line":430,"column":82,"nodeType":"108","messageId":"109","endLine":430,"endColumn":84},{"ruleId":"106","severity":1,"message":"121","line":433,"column":79,"nodeType":"108","messageId":"109","endLine":433,"endColumn":81},{"ruleId":"122","severity":1,"message":"123","line":475,"column":17,"nodeType":"124","endLine":475,"endColumn":87},{"ruleId":"122","severity":1,"message":"123","line":478,"column":17,"nodeType":"124","endLine":478,"endColumn":96},{"ruleId":"122","severity":1,"message":"123","line":481,"column":17,"nodeType":"124","endLine":481,"endColumn":97},{"ruleId":"122","severity":1,"message":"123","line":484,"column":17,"nodeType":"124","endLine":484,"endColumn":92},{"ruleId":"125","severity":1,"message":"126","line":502,"column":177,"nodeType":"127","endLine":502,"endColumn":204},{"ruleId":"118","severity":1,"message":"128","line":1,"column":28,"nodeType":"112","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"121","line":26,"column":23,"nodeType":"108","messageId":"109","endLine":26,"endColumn":25},{"ruleId":"118","severity":1,"message":"128","line":1,"column":10,"nodeType":"112","messageId":"120","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"129","line":24,"column":6,"nodeType":"116","endLine":24,"endColumn":8,"suggestions":"130"},{"ruleId":"106","severity":1,"message":"107","line":34,"column":27,"nodeType":"108","messageId":"109","endLine":34,"endColumn":29},{"ruleId":"118","severity":1,"message":"131","line":4,"column":10,"nodeType":"112","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"132","line":4,"column":16,"nodeType":"112","messageId":"120","endLine":4,"endColumn":23},{"ruleId":"118","severity":1,"message":"133","line":9,"column":12,"nodeType":"112","messageId":"120","endLine":9,"endColumn":24},{"ruleId":"118","severity":1,"message":"134","line":48,"column":15,"nodeType":"112","messageId":"120","endLine":48,"endColumn":25},{"ruleId":"118","severity":1,"message":"135","line":49,"column":15,"nodeType":"112","messageId":"120","endLine":49,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":83,"column":30,"nodeType":"108","messageId":"109","endLine":83,"endColumn":32},{"ruleId":"118","severity":1,"message":"136","line":1,"column":17,"nodeType":"112","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"128","line":1,"column":28,"nodeType":"112","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":82,"column":45,"nodeType":"108","messageId":"109","endLine":82,"endColumn":47},{"ruleId":"106","severity":1,"message":"107","line":112,"column":60,"nodeType":"108","messageId":"109","endLine":112,"endColumn":62},{"ruleId":"106","severity":1,"message":"107","line":29,"column":33,"nodeType":"108","messageId":"109","endLine":29,"endColumn":35},{"ruleId":"118","severity":1,"message":"134","line":43,"column":29,"nodeType":"112","messageId":"120","endLine":43,"endColumn":39},{"ruleId":"118","severity":1,"message":"137","line":44,"column":29,"nodeType":"112","messageId":"120","endLine":44,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":30,"column":33,"nodeType":"108","messageId":"109","endLine":30,"endColumn":35},{"ruleId":"118","severity":1,"message":"136","line":1,"column":16,"nodeType":"112","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":16,"column":32,"nodeType":"108","messageId":"109","endLine":16,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":39,"column":31,"nodeType":"108","messageId":"109","endLine":39,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":63,"column":29,"nodeType":"108","messageId":"109","endLine":63,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":89,"column":42,"nodeType":"108","messageId":"109","endLine":89,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":101,"column":14,"nodeType":"108","messageId":"109","endLine":101,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":108,"column":14,"nodeType":"108","messageId":"109","endLine":108,"endColumn":16},{"ruleId":"118","severity":1,"message":"138","line":117,"column":9,"nodeType":"112","messageId":"120","endLine":117,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":203,"column":38,"nodeType":"108","messageId":"109","endLine":203,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":208,"column":41,"nodeType":"108","messageId":"109","endLine":208,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":210,"column":12,"nodeType":"108","messageId":"109","endLine":210,"endColumn":14},{"ruleId":"110","severity":1,"message":"139","line":233,"column":9,"nodeType":"112","messageId":"113","endLine":233,"endColumn":14},{"ruleId":"110","severity":1,"message":"139","line":235,"column":9,"nodeType":"112","messageId":"113","endLine":235,"endColumn":14},{"ruleId":"110","severity":1,"message":"139","line":237,"column":9,"nodeType":"112","messageId":"113","endLine":237,"endColumn":14},{"ruleId":"110","severity":1,"message":"139","line":239,"column":9,"nodeType":"112","messageId":"113","endLine":239,"endColumn":14},{"ruleId":"110","severity":1,"message":"139","line":241,"column":9,"nodeType":"112","messageId":"113","endLine":241,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":293,"column":19,"nodeType":"124","endLine":293,"endColumn":156},{"ruleId":"140","severity":1,"message":"141","line":345,"column":19,"nodeType":"124","endLine":345,"endColumn":156},{"ruleId":"118","severity":1,"message":"136","line":2,"column":20,"nodeType":"112","messageId":"120","endLine":2,"endColumn":29},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'anchor' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedJwt'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-unused-vars","'months' is assigned a value but never used.","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setNotes'. Either include it or remove the dependency array. If 'setNotes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["145"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'sendStartSMS' is defined but never used.","'pumpnumber' is assigned a value but never used.","'pumpstartcode' is assigned a value but never used.","'useEffect' is defined but never used.","'pumpstopcode' is assigned a value but never used.","'findEditPump' is assigned a value but never used.","'modal' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [storedJwt]",{"range":"150","text":"151"},"Update the dependencies array to be: [setNotes]",{"range":"152","text":"153"},[9261,9263],"[storedJwt]",[573,575],"[setNotes]"]